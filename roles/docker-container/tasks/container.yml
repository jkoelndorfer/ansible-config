---

- name: create container data volume
  include_role: name=volume private=True
  vars:
    path: "{{ container_data_directory }}/{{ container_name }}"
    owner: root
    group: root
    mode: 0755
    btrfs_subvolume: "{{ btrfs_volumes | default(False) }}"

- name: create container data directories
  file:
    path: "{{ item.src if item.src[0] == '/' else '/'.join([container_data_directory, container_name, item.src]) }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  become: True
  register: container_data_directories
  with_items: "{{ volumes }}"
  when: "{{ item.type is not defined or item.type == 'directory' }}"

- name: run container-specific configuration tasks
  include: "{{ config_tasks }}"
  when: config_tasks is defined

- name: "container {{ container_name }}"
  docker_container:
    name:  "{{ container_name }}"
    image: "{{ (repository + '/' + image_name) if repository is defined else image_name }}:{{ tag }}"
    state: "{{ state }}"
    command: "{{ command | default(omit) }}"
    restart: "{{ restart | default(omit) }}"
    restart_policy: "{{ restart_policy | default('always') }}"
    expose: "{{ expose | default(omit) }}"
    published_ports: "{{ published_ports | default(omit) }}"
    links: "{{ links | default(omit) }}"
    hostname: "{{ hostname | default(omit) }}"
    volumes: >-
      [
        {% for v in (volumes | default([])) %}
        "{{ (v.src if v.src[0] == '/' else '/'.join([container_data_directory, container_name, v.src])) +
           ":" + v.dest + ":" + (v.mount_mode | default('rw')) }}"{% if not loop.last %},{% endif %}
        {% endfor %}
      ]
    env: "{{ env | default(omit) }}"
    tty: true
    interactive: true
  become: True
