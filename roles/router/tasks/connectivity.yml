---

# Determines how to connect to the router. If all else fails,
# try specifying ansible_host on the command line.

- name: include router secret variables
  include_vars: secret_vars/router.yml

- name: include role variables
  include_vars: roles/router/vars/main.yml

- name: set connectivity default
  set_fact:
    router_connectivity_done: False

- name: check router connectivity by hostname
  connection: local
  wait_for:
    host: "{{ ansible_host }}"
    port: 22
    state: started
    connect_timeout: 1
    timeout: 1
  register: router_connectivity_check
  ignore_errors: True

- name: set connectivity variable
  set_fact:
    router_connectivity_done: True
  when: router_connectivity_check | success

- name: check that router link interface is defined
  connection: local
  fail: msg="You must specify router_interface as the interface the router is reachable on"
  when: router_interface is undefined and router_connectivity_check | failed

- name: attempt connectivity with alternate address
  include: connectivity-alternate.yml
  with_items: "{{ router_alternate_addresses }}"
  when: not router_connectivity_done
  loop_control:
    loop_var: alternate_address

- name: ensure router connectivity is OK
  fail: msg="Could not establish connectivity to router"
  when: router_connectivity_check | failed

- name: set router WAN MAC address for internet connectivity
  raw: uci set network.wan.macaddr={{ router_wan_mac_address }}; \
       uci set network.wan6.macaddr={{ router_wan_mac_address }}; \
       uci commit network; \
       /etc/init.d/network restart
